openapi: 3.0.3
info:
  title: Product Service APIs
  version: 1.0.0
  description: Your API description
paths:
  /product/v1/api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /product/v1/categories/:
    get:
      operationId: categories_list
      description: Manage categories
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: categories_create
      description: Manage categories
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /product/v1/categories/{id}/:
    get:
      operationId: categories_retrieve
      description: Manage categories
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this category.
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: categories_update
      description: Manage categories
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categories_partial_update
      description: Manage categories
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: categories_destroy
      description: Manage categories
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this category.
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /product/v1/images/:
    get:
      operationId: images_list
      description: Manage images
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - images
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImageList'
          description: ''
    post:
      operationId: images_create
      description: Manage images
      tags:
      - images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
  /product/v1/images/{id}/:
    get:
      operationId: images_retrieve
      description: Manage images
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this image.
        required: true
      tags:
      - images
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    put:
      operationId: images_update
      description: Manage images
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this image.
        required: true
      tags:
      - images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    patch:
      operationId: images_partial_update
      description: Manage images
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this image.
        required: true
      tags:
      - images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImage'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    delete:
      operationId: images_destroy
      description: Manage images
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this image.
        required: true
      tags:
      - images
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /product/v1/options/:
    get:
      operationId: options_list
      description: Manage options
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - options
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOptionList'
          description: ''
    post:
      operationId: options_create
      description: Manage options
      tags:
      - options
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Option'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Option'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Option'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'
          description: ''
  /product/v1/options/{id}/:
    get:
      operationId: options_retrieve
      description: Manage options
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this option.
        required: true
      tags:
      - options
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'
          description: ''
    put:
      operationId: options_update
      description: Manage options
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this option.
        required: true
      tags:
      - options
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Option'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Option'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Option'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'
          description: ''
    patch:
      operationId: options_partial_update
      description: Manage options
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this option.
        required: true
      tags:
      - options
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOption'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'
          description: ''
    delete:
      operationId: options_destroy
      description: Manage options
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this option.
        required: true
      tags:
      - options
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /product/v1/products/:
    get:
      operationId: products_list
      description: Manage products
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: products_create
      description: Manage products
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /product/v1/products/{id}/:
    get:
      operationId: products_retrieve
      description: Manage products
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this product.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_update
      description: Manage products
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_partial_update
      description: Manage products
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_destroy
      description: Manage products
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this product.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /product/v1/products/{id}/reviews/:
    get:
      operationId: products_reviews_retrieve
      description: Manage products
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this product.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /product/v1/products/{id}/variants/:
    get:
      operationId: products_variants_retrieve
      description: Manage products
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this product.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /product/v1/reviews/:
    get:
      operationId: reviews_list
      description: Manage reviews
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: reviews_create
      description: Manage reviews
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /product/v1/reviews/{id}/:
    get:
      operationId: reviews_retrieve
      description: Manage reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this review.
        required: true
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: reviews_update
      description: Manage reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this review.
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: reviews_partial_update
      description: Manage reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this review.
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: reviews_destroy
      description: Manage reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this review.
        required: true
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /product/v1/variants/:
    get:
      operationId: variants_list
      description: Manage variants
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - variants
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVariantList'
          description: ''
    post:
      operationId: variants_create
      description: Manage variants
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Variant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Variant'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
          description: ''
  /product/v1/variants/{id}/:
    get:
      operationId: variants_retrieve
      description: Manage variants
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this variant.
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
          description: ''
    put:
      operationId: variants_update
      description: Manage variants
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this variant.
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Variant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Variant'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
          description: ''
    patch:
      operationId: variants_partial_update
      description: Manage variants
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this variant.
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVariant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVariant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVariant'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
          description: ''
    delete:
      operationId: variants_destroy
      description: Manage variants
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A unique value identifying this variant.
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        subcategories:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 150
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uri
          nullable: true
      required:
      - created_at
      - description
      - name
      - subcategories
      - updated_at
      - url
    Image:
      type: object
      properties:
        url:
          type: string
          maxLength: 255
        image:
          type: string
          format: uri
          readOnly: true
        content_type:
          type: string
          format: uri
          readOnly: true
        object_id:
          type: string
          format: uuid
      required:
      - content_type
      - image
      - object_id
      - url
    Option:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        images:
          type: string
          readOnly: true
        value:
          type: string
          maxLength: 30
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        variant:
          type: string
          format: uri
        product:
          type: string
          format: uri
      required:
      - images
      - price
      - product
      - url
      - value
      - variant
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedImageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Image'
    PaginatedOptionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Option'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PaginatedVariantList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Variant'
    PatchedCategory:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        subcategories:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 150
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uri
          nullable: true
    PatchedImage:
      type: object
      properties:
        url:
          type: string
          maxLength: 255
        image:
          type: string
          format: uri
          readOnly: true
        content_type:
          type: string
          format: uri
          readOnly: true
        object_id:
          type: string
          format: uuid
    PatchedOption:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        images:
          type: string
          readOnly: true
        value:
          type: string
          maxLength: 30
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        variant:
          type: string
          format: uri
        product:
          type: string
          format: uri
    PatchedProduct:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
        name:
          type: string
          maxLength: 255
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        user_id:
          type: string
          maxLength: 30
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        category:
          type: string
          format: uri
        reviews:
          type: array
          items:
            type: string
            format: uri
            nullable: true
        variants:
          type: array
          items:
            type: string
            format: uri
            nullable: true
    PatchedReview:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        user_id:
          type: string
          maxLength: 30
        body:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        product:
          type: string
          format: uri
    PatchedVariant:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
        products:
          type: array
          items:
            type: string
            format: uri
            nullable: true
    Product:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
        name:
          type: string
          maxLength: 255
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        user_id:
          type: string
          maxLength: 30
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        category:
          type: string
          format: uri
        reviews:
          type: array
          items:
            type: string
            format: uri
            nullable: true
        variants:
          type: array
          items:
            type: string
            format: uri
            nullable: true
      required:
      - category
      - created_at
      - description
      - id
      - name
      - price
      - updated_at
      - url
      - user_id
    Review:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        user_id:
          type: string
          maxLength: 30
        body:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        product:
          type: string
          format: uri
      required:
      - body
      - created_at
      - product
      - updated_at
      - url
      - user_id
    Variant:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
        products:
          type: array
          items:
            type: string
            format: uri
            nullable: true
      required:
      - name
      - url
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
